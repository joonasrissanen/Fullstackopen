{"version":3,"sources":["persons.js","App.js","index.js"],"names":["baseUrl","Notification","message","isError","style","background","fontSize","borderStyle","borderRadius","padding","marginBottom","color","PersonForm","name","number","handleNameChange","handleNumberChange","submitNewPerson","value","onChange","type","onClick","Persons","persons","deletePerson","map","person","key","Filter","filterValue","handleFilterChange","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterInput","setFilterInput","shownPersons","setShownPersons","setMessage","setError","useEffect","axios","get","then","res","data","filteredPersons","forEach","toLowerCase","substring","length","push","event","preventDefault","target","includes","window","confirm","oldPerson","find","p","id","personObject","put","maxId","Math","max","post","addPerson","concat","delete","newPersons","filter","elem","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.315d20fd.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nexport const getAll = () => {\n  return axios.get(baseUrl);\n};\n\nexport const addPerson = personObject => {\n  return axios.post(baseUrl, personObject);\n};\n\nexport const deletePerson = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport const updatePerson = (id, personObject) => {\n  return axios.put(`${baseUrl}/${id}`, personObject);\n}\n","import React, { useState, useEffect } from 'react'\nimport { getAll, addPerson, deletePerson, updatePerson } from './persons';\n\nconst Notification = ({ message, isError }) => {\n  const style = {\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div style={{...style, color: isError ? 'red' : 'green'}}>\n      {message}\n    </div>\n  )\n};\n\nconst PersonForm = ({ name, number, handleNameChange, handleNumberChange, submitNewPerson}) => {\n  return (\n    <form>\n      <div>\n        name: <input value={name} onChange={handleNameChange} />\n      </div>\n      <div>number: <input value={number} onChange={handleNumberChange} /></div>\n      <div>\n        <button type=\"submit\" onClick={submitNewPerson}>add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Persons = ({ persons, deletePerson }) => {\n  return (\n    persons.map(person => {\n      return (\n        <div key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => deletePerson(person)}>delete</button>\n        </div>\n      )\n    })\n  );\n};\n\nconst Filter = ({ filterValue, handleFilterChange }) => {\n  return (\n    <form>\n      <div>filter shown with <input value={filterValue} onChange={handleFilterChange} /></div>\n    </form>\n  );\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('');\n  const [filterInput, setFilterInput] = useState('');\n  const [shownPersons, setShownPersons] = useState(persons);\n  const [message, setMessage] = useState(null);\n  const [isError, setError] = useState(false);\n\n  useEffect(() => {\n    getAll().then(res => setPersons(res.data));\n  }, []);\n\n  useEffect(() => {\n    const filteredPersons = [];\n    persons.forEach(person => {\n      if (person) {\n        const name = person.name.toLowerCase();\n        if (name.substring(0, filterInput.length) === filterInput.toLowerCase() || filterInput === '') {\n          filteredPersons.push(person);\n        }\n      }\n    })\n    setShownPersons(filteredPersons);\n  }, [filterInput, persons]);\n\n  const handleFilterChange = (event) => {\n    event.preventDefault();\n    setFilterInput(event.target.value)\n  };\n\n  const handleNameChange = (event) => {\n    event.preventDefault();\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    event.preventDefault();\n    setNewNumber(event.target.value);\n  };\n\n  const submitNewPerson = (event) => {\n    event.preventDefault();\n    if (persons.map(person => person.name.toLowerCase()).includes(newName.toLowerCase())) {\n      if(window.confirm(`${newName} is already added to phonebook. Replace the old number with a new one?`)) {\n        const oldPerson = persons.find(p => p.name.toLowerCase() === newName.toLowerCase());\n        updatePerson(oldPerson.id, { ...oldPerson, number: newNumber})\n        .then(res => {\n          setPersons(persons.map(p => p.id === oldPerson.id ? res.data : p));\n          setMessage(`Updated ${newName}`);\n          setError(false);\n          setNewName('');\n          setNewNumber('');\n        });\n      }\n    } else if (newName !== '' && newNumber !== '') {\n      const maxId = Math.max(persons.map(p => p.id))\n      const personObj = {\n        name: newName,\n        number: newNumber,\n        id: maxId + 1,\n      }\n      addPerson(personObj).then(res => {\n        setPersons(persons.concat(res.data));\n        setMessage(`Added ${newName}`);\n        setError(false);\n        setNewName('');\n        setNewNumber('');\n      })\n    }\n  };\n\n  const removePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}`)) {\n      deletePerson(person.id).then(() => {\n        const newPersons = persons.filter(elem => elem.id !== person.id);\n        setMessage(`Deleted ${person.name}`);\n        setPersons(newPersons);\n      }).catch(() => {\n        setMessage(`Information of ${person.name} has already been removed from the server.`);\n        setError(true);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} isError={isError} />\n      <Filter filterValue={filterInput} handleFilterChange={handleFilterChange} />\n      <h2>Add a new</h2>\n      <PersonForm\n        name={newName}\n        number={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        submitNewPerson={submitNewPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={shownPersons} deletePerson={removePerson} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}